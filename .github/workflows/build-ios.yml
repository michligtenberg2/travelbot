name: Build TravelBot iOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'travelbot-ipa-builder/package-lock.json'

    - name: Install Capacitor CLI
      run: |
        npm install -g @capacitor/cli @ionic/cli
        cap --version

    - name: Navigate to Capacitor project and install dependencies
      run: |
        cd travelbot-ipa-builder
        npm install

    - name: Sync Capacitor iOS
      run: |
        cd travelbot-ipa-builder
        cap sync ios

    - name: Build iOS project with Xcode
      run: |
        cd travelbot-ipa-builder/ios/App

        # Verify workspace exists
        if [ ! -d "App.xcworkspace" ]; then
          echo "‚ùå Error: App.xcworkspace not found. Capacitor sync may have failed."
          exit 1
        fi

        # Show current directory and contents
        echo "=== Current Directory ==="
        pwd
        ls -la

        # Show Xcode version
        echo "=== Xcode Version ==="
        xcodebuild -version

        # List available schemes
        echo "=== Available Schemes ==="
        xcodebuild -workspace App.xcworkspace -list

        # Build and archive the app without signing
        echo "üèóÔ∏è Building and archiving iOS app..."
        set -x  # Enable command tracing
        xcodebuild clean archive \
          -workspace App.xcworkspace \
          -scheme App \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath App.xcarchive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          -allowProvisioningUpdates \
          | tee build.log
        set +x  # Disable command tracing
        
        # Check if archive was actually created
        echo "=== Post-build Check ==="
        ls -la App.xcarchive/ || echo "‚ùå Archive directory not found!"
        find . -name "App.xcarchive" -type d || echo "‚ùå No archive found!"
        
        # Show last few lines of build log if it exists
        if [ -f "build.log" ]; then
          echo "=== Last 20 lines of build log ==="
          tail -20 build.log
        fi

    - name: Create unsigned IPA
      run: |
        cd travelbot-ipa-builder/ios/App

        echo "=== Current Directory Contents ==="
        ls -la

        # Verify archive exists
        if [ ! -d "App.xcarchive" ]; then
          echo "‚ùå Error: App.xcarchive not found. Previous build step may have failed."
          echo "=== Searching for any archives ==="
          find . -name "*.xcarchive" -type d || echo "No .xcarchive directories found"
          echo "=== Directory listing ==="
          ls -la
          exit 1
        fi

        echo "‚úÖ Archive found! Inspecting contents..."
        echo "=== Archive Structure ==="
        find App.xcarchive -type d | head -15
        find App.xcarchive -name "*.app" -type d

        # Create build directory
        mkdir -p ./build

        echo "üì¶ Creating IPA manually from .app bundle..."
        
        # Find the .app bundle in the archive
        APP_PATH=$(find App.xcarchive -name "*.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "‚ùå Error: No .app bundle found in archive"
          echo "Archive structure:"
          find App.xcarchive -type d | head -10
          echo "All files in archive:"
          find App.xcarchive -type f | head -10
          exit 1
        fi
        
        echo "‚úÖ Found app bundle: $APP_PATH"
        
        # Verify the .app bundle has content
        echo "=== App Bundle Contents ==="
        ls -la "$APP_PATH" | head -10
        
        # Create Payload directory and copy app
        mkdir -p ./build/Payload
        cp -R "$APP_PATH" ./build/Payload/
        
        # Verify copy worked
        echo "=== Payload Directory ==="
        ls -la ./build/Payload/
        
        # Create IPA by zipping Payload directory  
        cd ./build
        zip -r TravelBot-4.0.0.ipa Payload/
        cd ..
        
        # Verify IPA was created
        if [ -f "./build/TravelBot-4.0.0.ipa" ]; then
          echo "‚úÖ IPA manually created: TravelBot-4.0.0.ipa"
          echo "=== IPA Details ==="
          ls -lh ./build/TravelBot-4.0.0.ipa
          file ./build/TravelBot-4.0.0.ipa
        else
          echo "‚ùå Error: IPA file not created!"
          echo "Build directory contents:"
          ls -la ./build/
          exit 1
        fi
        
        # List final build results
        echo "=== Final Build Results ==="
        ls -la ./build/

    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: travelbot-ios-app
        path: |
          travelbot-ipa-builder/ios/App/build/*.ipa
        retention-days: 30

    - name: List build results
      run: |
        echo "=== Build Results ==="
        ls -la travelbot-ipa-builder/ios/App/build/ || echo "Build directory not found"
        find travelbot-ipa-builder/ios/App -name "*.ipa" -type f || echo "No IPA files found"
